version: '3.8'
services:
  postgres:
    image: 'postgres:17'
    container_name: 'java-postgres'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
    volumes:
        - db_data:/var/lib/postgresql/data

  redis:
    image: redis:8.0.2
    ports:
      - "6379:6379"


volumes:
  db_data:

#  client-frontend:
#    image: client:0.0.1
#    build: ./front
#    restart: always
#    ports:
#      - '3000:3000'
#    volumes:
#      - ./front:/app
#    networks:
#      - app-network
#
#  server:
#    image: server:0.0.1
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres
#    environment:
#      - SERVER_PORT= 8080
#      - SPRING_DATASOURCE_USERNAME=&{POSTGRES_USER}
#      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
#      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
#      - SPRING_JPA_SHOW-SQL=true
#    networks:
#      - app-network



#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    networks:
#      - app-network
#    restart: unless-stopped
#
#volumes:
#  postgres_data:
#
#networks:
#  app-network:
#    driver: bridge